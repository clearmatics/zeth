#!/usr/bin/env python3

from commands import DEFAULT_CONFIG_FILE
from click import command, option
from typing import Optional


@command()
@option("--path", default=".", help="Server working path")
@option("--config", "-n", default=DEFAULT_CONFIG_FILE, help="Configuration file")
@option("--pot-path", default=None, help="Path to poweroftau repository")
@option("--num-powers", "-n", default=None, type=int, help="Number of powers")
def phase1_server(
        path: str,
        config: str,
        pot_path: Optional[str],
        num_powers: Optional[int]) -> None:
    """
    Phase1 MPC coordinator process.  Reads the given configuration file and
    listens for contributor connections.  Command line parameters override
    any values set in the config file.
    """

    from coordinator.phase1_contribution_handler import \
        Phase1ServerConfig, Phase1ContributionHandler
    from coordinator.server import Server
    import time

    # Load config file, overriding with any command line params.
    with open(config, "r") as config_f:
        phase1_config = Phase1ServerConfig.from_json(config_f.read())
        if pot_path:
            phase1_config.powersoftau_path = pot_path
        if num_powers:
            phase1_config.num_powers = num_powers

    try:
        handler = Phase1ContributionHandler(phase1_config)
        server = Server(handler, phase1_config.server_configuration, path)
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        server.stop()


if __name__ == "__main__":
    phase1_server()
