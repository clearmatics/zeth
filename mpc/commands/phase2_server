#!/usr/bin/env python3

"""
Script to launch a phase2 coordinator server.
"""

from commands import DEFAULT_CONFIG_FILE
from click import command, option
from typing import Optional


@command()
@option("--path", default=".", help="Server working path")
@option("--config", default=DEFAULT_CONFIG_FILE, help="Configuration file")
@option("--mpc-tool", default=None, help="Path to mpc executable")
def phase2_server(
        path: str,
        config: str,
        mpc_tool: Optional[str]) -> None:
    """
    Phase2 MPC coordinator process.  Reads the given configuration file and
    listens for contributor connections.  Command line parameters override
    any values set in the config file.
    """
    from coordinator.phase2_contribution_handler import \
        Phase2ServerConfig, Phase2ContributionHandler
    from coordinator.server import Server
    import time

    with open(config, "r") as config_f:
        phase2_config = Phase2ServerConfig.from_json(config_f.read())
        if mpc_tool:
            phase2_config.mpc_tool = mpc_tool

    try:
        handler = Phase2ContributionHandler(phase2_config)
        server = Server(handler, phase2_config.server_configuration, path)
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        server.stop()


if __name__ == "__main__":
    phase2_server()
