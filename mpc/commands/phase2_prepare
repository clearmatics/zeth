#!/usr/bin/env python3

from click import command, argument, option
from coordinator.powersoftau_process_command import PowersOfTauProcessCommand
from coordinator.mpc_command import MPCCommand
from coordinator.phase2_contribution_handler import CHALLENGE_0_FILE
from typing import Optional

LAGRANGE_FILE = "lagrange.bin"
LINEAR_COMBINATION_FILE = "linear_combination.bin"


@command()
@argument("pot-file")
@argument("degree", type=int)
@option("--pot-tool", default=None, help="path to pot-process tool")
@option("--mpc-tool", default=None, help="path to mpc tool")
def phase2_prepare(
        pot_file: str,
        degree: int,
        pot_tool: Optional[str],
        mpc_tool: Optional[str]) -> None:
    """
    Process powersoftau (Phase1) output to create input data required for
    Phase2.
    """

    pot_process = PowersOfTauProcessCommand(pot_tool)
    if not pot_process.compute_lagrange(pot_file, degree, LAGRANGE_FILE):
        raise Exception("Lagrange computation failed")

    mpc = MPCCommand(mpc_tool)
    if not mpc.linear_combination(
            pot_file, LAGRANGE_FILE, LINEAR_COMBINATION_FILE):
        raise Exception("linear combination failed")

    if not mpc.phase2_begin(LINEAR_COMBINATION_FILE, CHALLENGE_0_FILE):
        raise Exception("failed computing challenge 0")


if __name__ == "__main__":
    phase2_prepare()
