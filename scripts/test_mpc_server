#!/usr/bin/env bash

. scripts/test_mpc_common.sh

# Test an mpc server that has been set up with a test handler, using the
# configuration in ./testdata.

set -e
. src/mpc/env/bin/activate
set -x

# Get challenge
function get_challenge() {
    while ! (curl --fail -o challenge.bin http://${HOST}:${PORT}/challenge) ; do
        echo Server may still be computing ...
        sleep 1
    done
}

# Upload contribution
# 1 - private key
# 2 - public key
# 3 - client id
function contribute() {
    contributor_dir=_test_contrib_$3
    rm -rf ${contributor_dir}
    mkdir -p ${contributor_dir}
    pushd ${contributor_dir}

    get_challenge

    # perform contribution
    ${MPC} phase2-contribute \
       --skip-user-input \
       --digest response.bin.digest \
       --out response.bin challenge.bin

    contrib_sha=`shasum -a 512 response.bin | awk '{print $1}'`
    pub_key=`cat $2`
    sig=`sign_contribution $1 ${contrib_sha}`
    curl \
        --fail \
        --fail-early \
        -H 'X-MPC-Digest:'${contrib_sha} \
        -H 'X-MPC-Public-Key: '${pub_key} \
        -H 'X-MPC-Signature:'${sig} \
        -F "data=@response.bin" \
        http://${HOST}:${PORT}/contribute

    popd
}

scripts/test_mpc_server_stop || echo -n
scripts/test_mpc_server_start
# stop_server
# prepare_server
# start_server

# make 4 contributions
contribute ${PRV_KEY_1} ${PUB_KEY_1} 1
contribute ${PRV_KEY_2} ${PUB_KEY_2} 2
contribute ${PRV_KEY_3} ${PUB_KEY_3} 3
contribute ${PRV_KEY_4} ${PUB_KEY_4} 4

# Server will spend some time verifying.  Wait for it.
while ! [ -e ${FINAL_OUTPUT_FILE} ] ; do
      echo Waiting for ${FINAL_OUTPUT_FILE} ...
      sleep 1
done

while ! [ -e ${FINAL_TRANSCRIPT_FILE} ] ; do
      echo Waiting for ${FINAL_TRANSCRIPT_FILE} ...
      sleep 1
done

# Verify the transcript, checking for contribution
${MPC} phase2-verify-transcript \
       ${CHALLENGE_0_FILE} ${FINAL_TRANSCRIPT_FILE} ${FINAL_OUTPUT_FILE}
${MPC} phase2-verify-transcript \
       --digest _test_contrib_1/response.bin.digest \
       ${CHALLENGE_0_FILE} ${FINAL_TRANSCRIPT_FILE} ${FINAL_OUTPUT_FILE}
${MPC} phase2-verify-transcript \
       --digest _test_contrib_2/response.bin.digest \
       ${CHALLENGE_0_FILE} ${FINAL_TRANSCRIPT_FILE} ${FINAL_OUTPUT_FILE}
${MPC} phase2-verify-transcript \
       --digest _test_contrib_3/response.bin.digest \
       ${CHALLENGE_0_FILE} ${FINAL_TRANSCRIPT_FILE} ${FINAL_OUTPUT_FILE}
${MPC} phase2-verify-transcript \
       --digest _test_contrib_4/response.bin.digest \
       ${CHALLENGE_0_FILE} ${FINAL_TRANSCRIPT_FILE} ${FINAL_OUTPUT_FILE}

# Shut down the server
scripts/test_mpc_server_stop

set +x
set +e
echo "============================================================"
echo "==                        PASSED                          =="
echo "============================================================"
