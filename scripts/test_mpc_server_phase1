#!/usr/bin/env bash

. scripts/test_mpc_common.sh

set -e
set -x

# Test an phase1 mpc server that has been set up with a test handler, using the
# configuration in ./testdata.

function prepare_server_phase1() {
    prepare_server_common ${PHASE1_SERVER_DIR}

    # Perform the phase1-specific setup
    pushd ${PHASE1_SERVER_DIR}

    # Config
    now=`python -c 'import time; print(time.strftime("%Y-%m-%d %H:%M:%S"))'`
    sed \
        -e "s/TIME/${now}/g" \
        -e "s/PORT/${PHASE1_PORT}/g" \
        -e "s/QAP_DEGREE/${QAP_DEGREE}/g" \
        ${PHASE1_CONFIG_TEMPLATE} \
        > phase1_server_config.json

    popd
}

# Upload contribution
# 1 - private key
# 2 - client id
# 3 - server dir
function contribute() {
    contributor_dir=_test_phase1_contrib_$2
    rm -rf ${contributor_dir}
    mkdir -p ${contributor_dir}
    pushd ${contributor_dir}
    phase1_contribute \
        --skip-user-input \
        -n ${QAP_DEGREE} \
        --pot-path ${POT_DIR} \
        --server-certificate $3/${SERVER_CERT} \
        --insecure \
        https://${HOST}:${PHASE1_PORT} $1
    popd
}

function get_state_phase1() {
    curl \
        -k \
        --cacert ${PHASE1_SERVER_DIR}/${SERVER_CERT} \
        --fail https://${HOST}:${PHASE1_PORT}/state
}

stop_server_common ${PHASE1_SERVER_DIR} || echo -n

prepare_server_phase1

# Start server in background
start_server_common \
    ${PHASE1_SERVER_DIR} \
    "phase1_server --config phase1_server_config.json" \
    get_state_phase1

# make 4 contributions
contribute ${PRV_KEY_1} 1 ${PHASE1_SERVER_DIR}
contribute ${PRV_KEY_2} 2 ${PHASE1_SERVER_DIR}
contribute ${PRV_KEY_3} 3 ${PHASE1_SERVER_DIR}
contribute ${PRV_KEY_4} 4 ${PHASE1_SERVER_DIR}

pushd ${PHASE1_SERVER_DIR}

# Server will spend some time verifying.  Wait for it.
while ! [ -e ${FINAL_OUTPUT_FILE} ] ; do
      echo Waiting for ${FINAL_OUTPUT_FILE} ...
      sleep 1
done

while ! [ -e ${FINAL_TRANSCRIPT_FILE} ] ; do
      echo Waiting for ${FINAL_TRANSCRIPT_FILE} ...
      sleep 1
done

# # Verify the transcript, checking for contribution
# ${MPC} phase2-verify-transcript \
#        ${CHALLENGE_0_FILE} ${FINAL_TRANSCRIPT_FILE} ${FINAL_OUTPUT_FILE}
# ${MPC} phase2-verify-transcript \
#        --digest _test_contrib_1/response.bin.digest \
#        ${CHALLENGE_0_FILE} ${FINAL_TRANSCRIPT_FILE} ${FINAL_OUTPUT_FILE}
# ${MPC} phase2-verify-transcript \
#        --digest _test_contrib_2/response.bin.digest \
#        ${CHALLENGE_0_FILE} ${FINAL_TRANSCRIPT_FILE} ${FINAL_OUTPUT_FILE}
# ${MPC} phase2-verify-transcript \
#        --digest _test_contrib_3/response.bin.digest \
#        ${CHALLENGE_0_FILE} ${FINAL_TRANSCRIPT_FILE} ${FINAL_OUTPUT_FILE}
# ${MPC} phase2-verify-transcript \
#        --digest _test_contrib_4/response.bin.digest \
#        ${CHALLENGE_0_FILE} ${FINAL_TRANSCRIPT_FILE} ${FINAL_OUTPUT_FILE}

popd

# Shut down the server
stop_server_common ${PHASE1_SERVER_DIR}

set +x
set +e
passed
