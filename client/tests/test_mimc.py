# Copyright (c) 2015-2020 Clearmatics Technologies Ltd
#
# SPDX-License-Identifier: LGPL-3.0+

from zeth.core.mimc import MiMC7, MiMC11, MiMC31
from unittest import TestCase


class TestMiMC(TestCase):

    def test_mimc7_round(self) -> None:
        m = MiMC7("Clearmatics")
        x = 340282366920938463463374607431768211456
        k = 28948022309329048855892746252171976963317496166410141009864396001978282409983  # noqa
        c = 14220067918847996031108144435763672811050758065945364308986253046354060608451  # noqa
        self.assertEqual(
            m.mimc_round(x, k, c),
            7970444205539657036866618419973693567765196138501849736587140180515018751924)  # noqa

    def test_mimc7(self) -> None:
        m = 28948022309329048855892746252171976963317496166410141009864396001978282409983  # noqa
        k = 14220067918847996031108144435763672811050758065945364308986253046354060608451  # noqa
        h = 14404914332179247771191118015445305957789480573634910846417052002923707343766  # noqa
        result = MiMC7().hash(m, k)
        self.assertEqual(h, result)

    def test_mimc31_round(self) -> None:
        m = MiMC31()
        x = 340282366920938463463374607431768211456
        k = 3614637061043937583146271435827337369189798160947949526058695634226054692860  # noqa
        c = 5775606169419625606859319496982126279674858730791300481051019590436651369410  # noqa
        h = 5523634951166384704739554074217840169048851347397743343350526776025419511991  # noqa
        result = m.mimc_round(x, k, c)
        self.assertEqual(h, result)

    def test_mimc31(self) -> None:
        m = 3614637061043937583146271435827337369189798160947949526058695634226054692860  # noqa
        k = 5775606169419625606859319496982126279674858730791300481051019590436651369410  # noqa
        h = 7575204549404107478830739557698679330537656688050664462892741835534561279075  # noqa
        result = MiMC31().hash(m, k)
        self.assertEqual(h, result)

    def test_mimc11_round(self) -> None:
        m = MiMC11()
        x = 340282366920938463463374607431768211456
        k = 3614637061043937583146271435827337369189798160947949526058695634226054692860  # noqa
        c = 5775606169419625606859319496982126279674858730791300481051019590436651369410  # noqa
        h = 7949080550923660480909666807521110051431636088551585574728431102319210430206  # noqa
        result = m.mimc_round(x, k, c)
        self.assertEqual(h, result)

    def test_mimc11(self) -> None:
        m = 3614637061043937583146271435827337369189798160947949526058695634226054692860  # noqa
        k = 5775606169419625606859319496982126279674858730791300481051019590436651369410  # noqa
        h = 1922747653854796309765290716308492122248047880087939868097458242655404425864  # noqa
        result = MiMC11().hash(m, k)
        self.assertEqual(h, result)
