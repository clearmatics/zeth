syntax = "proto3";

package prover_proto;

import "google/protobuf/empty.proto";
import "api/pghr13_messages.proto";
import "api/groth16_messages.proto";

service Prover {
    // Fetch the verification key from the proving service
    rpc GetVerificationKey(google.protobuf.Empty) returns (VerificationKey) {}

    // Request a proof generation on the given input
    rpc Prove(ProofInputs) returns (ExtendedProof) {}
}

// Inputs of the Prove function of the Prover service
message ProofInputs {
    string mk_root = 1;
    // List of inputs to the Joinsplit
    repeated JoinsplitInput js_inputs = 2;
    // List of output to the Joinsplit
    repeated ZethNote js_outputs = 3;
    // Hexadecimal string representing a uint64 value
    string pub_in_value = 4;
    // Hexadecimal string representing a uint64 value
    string pub_out_value = 5;
    string h_sig = 6;
    string phi = 7;
}

message VerificationKey {
    oneof VK {
        VerificationKeyPGHR13 pghr13_verification_key = 1;
        VerificationKeyGROTH16 groth16_verification_key = 2;
    }
}

message ExtendedProof {
    oneof EP {
        ExtendedProofPGHR13 pghr13_extended_proof = 1;
        ExtendedProofGROTH16 groth16_extended_proof = 2;
    }
}
