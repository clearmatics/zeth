syntax = "proto3";

package prover_proto;

message ZethNote {
    string apk = 1;
    // Hex string representing a int64 value
    string value = 2;
    string rho = 3;
    string trap_r = 4;
}

message JoinsplitInput {
    // Merkle authentication path to the commitment
    // of the note in the Merkle tree. Each node of
    // the merkle tree is treated as a string
    repeated string merkle_path = 1;
    int64 address = 2;
    ZethNote note = 3;
    string spending_ask = 4;
    string nullifier = 5;
}

// Every point coordinate (ie: base field element)
// is treated as an hexadecimal string.
// The points in G1 are represented in affine form.
message HexadecimalPointBaseGroup1Affine {
    // First coordinate of the point
    string x_coord = 1;
    // Second coordinate of the point
    string y_coord = 2;
}

// The points in G2 are represented in affine form.
message HexadecimalPointBaseGroup2Affine {
    // First coordinate of the point
    string x_c1_coord = 1;
    string x_c0_coord = 2;
    // Second coordinate of the point
    string y_c1_coord = 3;
    string y_c0_coord = 4;
}
