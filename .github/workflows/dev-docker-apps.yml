name: dev-docker-build-zeth-apps

on:
  push:
    branches:
      - develop
      - docker-to-github
  pull_request:
    branches:
      - master

env:
  REPO_OWNER: "clearmatics"

jobs:

  docker-build:
    name: "Docker build"
    runs-on: ubuntu-20.04
    timeout-minutes: 360

    strategy:
      fail-fast: true
      matrix:
        app: ['mpc', 'client', 'prover']
      max-parallel: 3

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Get vars from git"
        id: git_vars
        run: echo ::set-output name=COMMIT_HASH::$(git rev-parse --short HEAD)

      - name: "Configure Docker"
        run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: "Set up Buildx"
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: "Build and push image git-SHA"
        run: |
          docker buildx build \
            --tag ghcr.io/$GITHUB_REPOSITORY:git-${{ steps.git_vars.outputs.COMMIT_HASH }}-${{ matrix.app }} \
            --cache-from=type=registry,ref=ghcr.io/$GITHUB_REPOSITORY:cache-${{ matrix.app }} \
            --cache-to=type=registry,ref=ghcr.io/$GITHUB_REPOSITORY:cache-${{ matrix.app }} \
            --platform linux/amd64 \
            --output "type=image,push=true" \
            --file ./Dockerfile-${{ matrix.app }} ./

  test:
    name: "Test"
    needs: docker-build
    runs-on: ubuntu-20.04
    timeout-minutes: 360

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Get vars from git"
        id: git_vars
        run: echo ::set-output name=COMMIT_HASH::$(git rev-parse --short HEAD)

      - name: "Configure Docker"
        run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: "Run service"
        run: echo "Here we will run docker-compose based on images git-"${{ steps.git_vars.outputs.COMMIT_HASH }}

      - name: "Test RPC"
        run: echo "Here we will run a tests"
